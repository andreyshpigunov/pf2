# Задачи для PF2

# Используем для задач плагин https://github.com/aziz/PlainTasks

Features:
  ✔ pfAssert:failIf(condition)[data] — удобно для отладки @done (17-02-14 19:36)
  ☐ Убрать в antiflood sql-команды с данными из лога?
  ☐ В генераторе форм учитывать поле formField из поля модели
  ☐ Процессор static в роутере. Полезно, если статику хотим закрыть авторизацией
     router.Static("/assets", "./assets")
     router.StaticFS("/more_static", http.Dir("my_file_system"))
     router.StaticFile("/favicon.ico", "./resources/favicon.ico")
  ☐ Сделать обработку X-Real-IP и X-Forwarded-For в pfRequest.
     https://github.com/gin-gonic/gin/blob/master/context.go#L341

Documentation:
  ☐ Написать документацию для контролеров для новой системы имен экшнов.
    ☐ Обработка запроса: цeпочка модулей, обработчики, запросы и ответы, мидлваре
    ☐ Маршрутизация: роутер, процессоры, реверс путей
    ☐ Шаблоны

SQL table:
    ☐ Если задано dbField, то пишем его в fieldExpression, если FE не задано явно.
       $lField.fieldExpression[$aOptions.fieldExpression]
    ☐ Сделать функцию для замены ^_builder.quoteIdentifier[$TABLE_ALIAS].^_builder.quoteIdentifier[last_ip])
        Используется для ip-поля в генераторе модели. Может быть и не проблема вызывать это в конструкторе.
        Вариант: _f(fieldName)
                 $.expression[inet_ntoa(_f(firstIP))] $.fieldExpression[_f(firstIP)]
                 $.expression[interval(_f(monthes), 3, 6, 12)]
    ☐ Сделать синтаксис для выражений к полям в запросах
        В выражении для поля
          _f(field) — поле
          _t(data) — ^taint[data] ???
          _e(expression) — выражение

          $.[_e(extract_json(_f(json), '^$.balance.summa')) <= [3]][10]
          $.[(extract_json(_f(json), '^$.balance.summa')) <= [3]][10]
          $.[@(extract_json(_f(json), '^$.balance.summa')) <= ][10]

          $.[(_f(json)->>'^$.date')][...]
          $.[_e(_f(json)->>'^$.date') between [10]][...]
          $.[@(_f(json)->>'^$.date') range[$.from[1] $.to[2]]

          where `table`.json->>'$.date' between '1' to '2'

          $.where[inet_ntoa('_t($lIP)') between _f(firstIP) and _f(lastIP)]

          ^t.match[^^\s*(_e|@)?(\((?:(?>[^^()]+)|(?2))*\))(?:\s*(\S+)(?:\s*(\S+))?)?][]

        Нужен синтаксис для обратного
          $.[summa <= _e->][(_f(json)->>'^$.balance.charges' * -1) + _f(json)->>'$.balance.payments']
    ☐ Подумать, что делать с not like, not regexp, similar to, not similar to
        $.[text (not similar to)][%(b|d)%]
    ☐ Автоматически подставлять поля из приджоиной таблицы:
        Добавляем метод для простого джоина
          ^self.joinTo[$core.auth.users;$self.userID = $core.auth.users.userID;$.type[left]]
          ^self.leftJoinTo[$core.auth.users;$self.userID = $core.auth.users.userID]
          @_allJoin[aOptions] оставляем для джоина по условию ^if($aOptions.joinToUsers){join users ...}

        ^self.addFieldsFrom[$core.auth.users;_fields(*)]
        ^self.addFieldsFrom[$core.auth.users;$.fields[$.userName[name] $.userPhone[phone]]]
        ^self.addFieldsFrom[$core.auth.users;_fields(name as userName, phone as userPhone)] — для алиасов забиваем на plurals

SQL:
  ✔ Перенести команду manage.p sql в библиотеку @done (17-02-14 19:26)
     Готово для mysql.
     Дамп схемы для sqlite: echo ".schema" | sqlite3 test_dump.sqlite3

Controllers:

Middleware:
  ✔ В csrf-мидлваре удалять поле токена из request.form. @done (17-02-14 19:59)

Generators:
  ☐ Рефакторинг manage.p generate form.
    ☐ Вынести виджеты в отдельные пакеты.
    ☐ Сделать класс виджетов для вертикальной формы BS4.
    ☐ Сделать короткие имена для виджетов: bs2, bs3, bs4, bs4_h, sui.
  ✔ Добавить генерацию cleanFormData с проверокой checkbox'ов в generate model. @done (17-02-14 20:26)

Console:
  ☐ Алиасы для команд?
     manage.p gen form
  ✔ Добавить в generate model обработку generated-полей в Майсиквеле. @done (17-02-14 19:47)

Auth:
  ☐ В auth.p@pfUserRolesAuth добавить время жизни куки в токен и проверять при авторизации
  ☐ Сделать дефолтную генерацию secureToken в модели pfUserModel. Посолить токен текущим временем.
  ☐ Команда manage.p auth [create-user|modify-user]



＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
Archive:
 ✔ Вынести обработку эксепшнов в отдельные методы котролеров @done (17-02-09 16:58) @project(Controllers)
  @catch<http.404>[request;exception] <--- ^abort(404)[...] -> [response]
 ✔ Добавить опцию authCookieSecure в конструкторе pfUerRolesAuth. @done (17-01-31 17:51) @project(Auth)
 ✔ Добавить декларативные имена экшнов: @done (17-01-28 09:01) @project(Controllers)
  Схему с onXxx, postXXX остаётся, но считается устаревшей.
  @onActionPath -> @/action/path, @onActionGET -> @get->/on/action
  @onINDEX -> @INDEX, @get->INDEX, @/, @get->/
  @onNOTFOUND -> @NOTFOUND
  @onDEFAULT -> @DEFAULT
  @postJSON -> @response<json>, @postDEFAULT -> @response<DEFAULT>
 ✔ Написать csrf-мидлваре. @done (17-01-24 13:39) @project(Middleware)
 ✔ Перенести метод digest из pf-secrets-app@CoreSecurity, добавить параметры secretKey и disableHMAC. @done (16-12-26 15:23) @project(Auth)
  В psSQLSecurity есть метод digest описан как hmac-digest, но хеширует без hmac. ✔ Добавить параметр cryptKey в pfSQLSecurity.encode/decode @done (16-12-09 12:08) @project(Features)
